"use strict";

// URL Base
var url_base = $("#infos").data("url-base"); // DEBOUNCE (Melhora a performance de funções repetitivas como "Scroll / Resize")

var debounce = function debounce(n, t, u) {
  var e;
  return function () {
    var a = this,
        i = arguments,
        o = function o() {
      e = null, u || n.apply(a, i);
    },
        r = u && !e;

    clearTimeout(e), e = setTimeout(o, t), r && n.apply(a, i);
  };
}; // Verifica se o tamanho da tela é menor do que o tamanho passado (Útil em caso de verificação de responsividade)


function isMobileX(screenSize) {
  return $(window).width() < screenSize;
} // Formata um valor para o formato de moeda real (R$)


function formataMoeda(v, c, d, t) {
  var n = v,
      c = isNaN(c = Math.abs(c)) ? 2 : c,
      d = d == undefined ? "," : d,
      t = t == undefined ? "." : t,
      s = n < 0 ? "-" : "",
      i = parseInt(n = Math.abs(+n || 0).toFixed(c)) + "",
      j = (j = i.length) > 3 ? j % 3 : 0;
  return s + (j ? i.substr(0, j) + t : "") + i.substr(j).replace(/(\d{3})(?=\d)/g, "$1" + t) + (c ? d + Math.abs(n - i).toFixed(c).slice(2) : "");
} // Copia uma string para a área de transferência


function copyToClipboard(str) {
  var el = document.createElement("textarea");
  el.value = str;
  el.setAttribute("readonly", "");
  el.style.position = "absolute";
  el.style.left = "-9999px";
  document.body.appendChild(el);
  var selected = document.getSelection().rangeCount > 0 ? document.getSelection().getRangeAt(0) : false;
  el.select();
  document.execCommand("copy");
  document.body.removeChild(el);

  if (selected) {
    document.getSelection().removeAllRanges();
    document.getSelection().addRange(selected);
  }
}
"use strict";

/* =================== LOADING =================== */
// Exibe loading
function showLoading() {
  $('.loading').fadeIn();
} // Oculta loading


function hideLoading() {
  $('.loading').fadeOut();
}
"use strict";

/* =================== MODAL =================== */
// Abre o modal
function openModal(modal) {
  $('body').css('overflow', 'hidden');
  $('#' + modal).addClass('open');
} // Fecha o modal


function closeModal(modal) {
  $('body').css('overflow', 'auto');
  $('#' + modal).removeClass('open');
} // Abre o modal de alerta


// function showAlert(titulo, mensagem, tipo) {
//   $('#modal-alert').removeClass('success warning error');
//   $('#modal-alert').addClass(tipo);
//   $('#alert-titulo').text(titulo);
//   $('#alert-texto').html(mensagem);
//   openModal('modal-alert');
// }

jQuery(document).ready(function ($) {
  // Abre o modal ao clicar no botão
  $('.modal-open').on('click', function (e) {
    e.preventDefault();
    openModal($(this).data('modal'));
  }); // Fecha o modal ao clicar no botão

  $('.modal-close').on('click', function (e) {
    e.preventDefault();
    closeModal($(this).data('modal'));
  }); // Fecha o modal ao clicar em qualquer outro lugar da tela

  $('.modal').on('click', function (e) {
    if (e.target == this && !$(this).hasClass('modal-force')) {
      closeModal($(this).attr('id'));
    }
  }); // Fecha o modal ao pressionar a tecla ESC

  $(document).on('keyup', function (e) {
    if (e.keyCode == 27) {
      $('.modal.open').not('.modal-force').each(function () {
        closeModal($(this).attr('id'));
      });
    }
  });
});
"use strict";

/* =================== TABS =================== */
jQuery(document).ready(function ($) {
  $('.tabs-abas li').on('click', function () {
    var tabId = $(this).data('tab');
    $('.tabs-abas li').removeClass('active');
    $('.tab-content').removeClass('active');
    $('#' + tabId).addClass('active');
    $(this).addClass('active');
  });
});
"use strict";

/* =================== SMOOTH SCROLL (SCROLL SUAVE) =================== */
// Scroll para um determinado elemento
function scrollToX(element) {
  var offset = 20;
  var $headerEl;

  if ($(".header").length > 0) {
    $headerEl = $(".header");
  } else if ($(".header-full").length > 0) {
    $headerEl = $(".header-full");
  }

  if ($headerEl && $headerEl.css("position") === "fixed") {
    offset = $headerEl.outerHeight() + 20;
  }

  console.log(offset);
  var top = $(element) ? $(element).offset().top - offset : 0;
  $("html, body").animate({
    scrollTop: top
  }, 500);
}

jQuery(document).ready(function ($) {
  // Scroll suave para âncoras
  $('a[href^="#"]:not([href="#"]):not([href="#0"])').click(function (ev) {
    ev.preventDefault();

    if (location.pathname.replace(/^\//, "") == this.pathname.replace(/^\//, "") || location.hostname == this.hostname) {
      var target = $(this.hash);
      target = target.length ? target : $("[name=" + this.hash.slice(1) + "]");

      if (target.length) {
        scrollToX(target);
        return false;
      }
    }
  }); // Scroll suave para links externos

  $(document).on("ready", function () {
    var urlHash = window.location.href.split("#")[1];

    if (urlHash && urlHash != 0) {
      scrollToX("#" + urlHash);
    }
  });
});
"use strict";

/* =================== HEADER FULL =================== */
jQuery(document).ready(function ($) {
  var header = $(".header-full");

  if (header.length > 0) {
    var toggleHeaderFull = function toggleHeaderFull() {
      var scrollTop = $(window).scrollTop();

      if (scrollTop > 100) {
        header.addClass("active");
      } else {
        header.removeClass("active");
      }
    };

    toggleHeaderFull();
    $(window).on("scroll", debounce(function () {
      toggleHeaderFull();
    }, 10));
  }
});
"use strict";

/* =================== MENU MOBILE =================== */
jQuery(document).ready(function ($) {
  // Open menu
  $('#menu-btn-mobile').on('click', function () {
    toggleNav();
  }); // Open submenu

  $('.has-children').children('a').on('click', function (event) {
    //prevent default clicking on direct children of .has-children 
    event.preventDefault();
    var selected = $(this);
    selected.next('ul').removeClass('is-hidden').end().parent('.has-children').parent('ul').addClass('move-out');
    $('.cd-dropdown-content').scrollTop(0);
  }); // Voltar

  $('.go-back').on('click', function () {
    var selected = $(this),
        visibleNav = $(this).parent('ul').parent('.has-children').parent('ul');
    selected.parent('ul').addClass('is-hidden').parent('.has-children').parent('ul').removeClass('move-out');
    $('.cd-dropdown-content').scrollTop(0);
  }); // Close menu

  $('.cd-dropdown-wrapper').on('click', function (ev) {
    if (ev.target == this) {
      closeNav();
    }
  }); // Close menu on swipe

  $('body').on('swipeleft', function (ev) {
    closeNav();
  }); // Toggle menu

  function toggleNav() {
    var navIsVisible = !$('.cd-dropdown').hasClass('dropdown-is-active') ? true : false;
    $('.cd-dropdown').toggleClass('dropdown-is-active', navIsVisible);
    $('.cd-dropdown-trigger').toggleClass('dropdown-is-active', navIsVisible);
    $('.cd-dropdown-wrapper').toggleClass('active');
    $('#menu-btn-mobile').addClass('active');

    if (!navIsVisible) {
      $('.cd-dropdown').one('webkitTransitionEnd otransitionend oTransitionEnd msTransitionEnd transitionend', function () {
        $('.has-children ul').addClass('is-hidden');
        $('.move-out').removeClass('move-out');
        $('.is-active').removeClass('is-active');
        $('#menu-btn-mobile').removeClass('active');
      });
    }
  } // Open menu


  function openNav() {
    var navIsVisible = !$('.cd-dropdown').hasClass('dropdown-is-active') ? true : false;
    $('.cd-dropdown').addClass('dropdown-is-active', navIsVisible);
    $('.cd-dropdown-trigger').addClass('dropdown-is-active', navIsVisible);
    $('.cd-dropdown-wrapper').addClass('active');
    $('#menu-btn-mobile').addClass('active');

    if (!navIsVisible) {
      $('.cd-dropdown').one('webkitTransitionEnd otransitionend oTransitionEnd msTransitionEnd transitionend', function () {
        $('.has-children ul').addClass('is-hidden');
        $('.move-out').removeClass('move-out');
        $('.is-active').removeClass('is-active');
        $('#menu-btn-mobile').removeClass('active');
      });
    }
  } // Close menu


  function closeNav() {
    var navIsVisible = !$('.cd-dropdown').hasClass('dropdown-is-active') ? true : false;
    $('.cd-dropdown').removeClass('dropdown-is-active', navIsVisible);
    $('.cd-dropdown-trigger').removeClass('dropdown-is-active', navIsVisible);
    $('.cd-dropdown-wrapper').removeClass('active');
    $('#menu-btn-mobile').removeClass('active');

    if (!navIsVisible) {
      $('.cd-dropdown').one('webkitTransitionEnd otransitionend oTransitionEnd msTransitionEnd transitionend', function () {
        $('.has-children ul').addClass('is-hidden');
        $('.move-out').removeClass('move-out');
        $('.is-active').removeClass('is-active');
        $('#menu-btn-mobile').removeClass('active');
      });
    }
  }
});
"use strict";

/* =================== VOLTAR AO TOPO =================== */
jQuery(document).ready(function ($) {
  function toggleGoTop() {
    var scrollTop = $(window).scrollTop();

    if (scrollTop > 100) {
      $(".gotop").addClass("active");
    } else {
      $(".gotop").removeClass("active");
    }
  }

  toggleGoTop();
  $(window).on("scroll", debounce(function () {
    toggleGoTop();
  }, 100));
  $(".gotop").on("click", function () {
    scrollToX("html");
  });
});
"use strict";

/* =================== MÁSCARAS DOS CAMPOS =================== */
// VALOR
$('.valor').mask('000.000.000.000.000,00', {
  reverse: true
}); // CEP

$(".cep").mask("00000-000"); // DATA

$(".data").mask("00/00/0000"); // CPF

$(".cpf").mask("000.000.000-00", {
  reverse: true
}); // CNPJ

$(".cnpj").mask("00.000.000/0000-00", {
  reverse: true
}); // CPF OU CNPJ

var cpfCnpj = function cpfCnpj(val) {
  return val.length > 14 ? '00.000.000/0000-00' : '000.000.000-009';
},
    optionsDocumento = {
  onKeyPress: function onKeyPress(val, e, field, options) {
    field.mask(cpfCnpj(val), options);
  }
};

$('.cpf-cnpj').mask(cpfCnpj, optionsDocumento); // TELEFONE

var telefoneSP = function telefoneSP(val) {
  return val.replace(/\D/g, '').length === 11 ? '(00) 00000-0000' : '(00) 0000-00009';
},
    spOptions = {
  onKeyPress: function onKeyPress(val, e, field, options) {
    field.mask(telefoneSP.apply({}, arguments), options);
  }
};

$('.telefone').mask(telefoneSP, spOptions); // CARTÃO DE CRÉDITO

$(".card-numero").mask("0000 0000 0000 0000", {
  reverse: true
}); // CARTÃO DE CRÉDITO (VALIDADE)

$(".card-validade").mask("00/00"); // DATEPICKER 
// https://flatpickr.js.org

$('.datepicker').flatpickr({
  dateFormat: "d/m/Y",
  //defaultDate: "today",
  disableMobile: "true",
  locale: {
    weekdays: {
      shorthand: ["Dom", "Seg", "Ter", "Qua", "Qui", "Sex", "Sáb"],
      longhand: ["Domingo", "Segunda-feira", "Terça-feira", "Quarta-feira", "Quinta-feira", "Sexta-feira", "Sábado"]
    },
    months: {
      shorthand: ["Jan", "Fev", "Mar", "Abr", "Mai", "Jun", "Jul", "Ago", "Set", "Out", "Nov", "Dez"],
      longhand: ["Janeiro", "Fevereiro", "Março", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro"]
    },
    rangeSeparator: " até "
  }
});
"use strict";

(function ($) {
  'use strict'; // Valida CPF

  function validarCPF(r) {
    var t, a, n, e, i;
    if (i = 1, (r = r.replace(/[^\d]+/g, "")).length < 11) return !1;

    for (e = 0; e < r.length - 1; e++) {
      if (r.charAt(e) != r.charAt(e + 1)) {
        i = 0;
        break;
      }
    }

    if (i) return !1;

    for (t = r.substring(0, 9), a = r.substring(9), n = 0, e = 10; e > 1; e--) {
      n += t.charAt(10 - e) * e;
    }

    if ((n % 11 < 2 ? 0 : 11 - n % 11) != a.charAt(0)) return !1;

    for (t = r.substring(0, 10), n = 0, e = 11; e > 1; e--) {
      n += t.charAt(11 - e) * e;
    }

    return (n % 11 < 2 ? 0 : 11 - n % 11) == a.charAt(1);
  } // Valida CNPJ


  function validarCNPJ(r) {
    if ("" == (r = r.replace(/[^\d]+/g, ""))) return !1;
    if (14 != r.length) return !1;
    if ("00000000000000" == r || "11111111111111" == r || "22222222222222" == r || "33333333333333" == r || "44444444444444" == r || "55555555555555" == r || "66666666666666" == r || "77777777777777" == r || "88888888888888" == r || "99999999999999" == r) return !1;

    for (var t = r.length - 2, n = r.substring(0, t), a = r.substring(t), e = 0, i = t - 7, u = t; u >= 1; u--) {
      e += n.charAt(t - u) * i--, i < 2 && (i = 9);
    }

    var f = e % 11 < 2 ? 0 : 11 - e % 11;
    if (f != a.charAt(0)) return !1;

    for (t += 1, n = r.substring(0, t), e = 0, i = t - 7, u = t; u >= 1; u--) {
      e += n.charAt(t - u) * i--, i < 2 && (i = 9);
    }

    return (f = e % 11 < 2 ? 0 : 11 - e % 11) == a.charAt(1);
  } // Valide CPF ou CNPJ


  function validaCPForCNPJ(value) {
    return validarCPF(value) || validarCNPJ(value);
  } // Nome completo 


  window.Parsley.addValidator('fullname', {
    validateString: function validateString(value) {
      var value = value.trim().split(' ');
      return value.length > 1;
    },
    messages: {
      'pt-br': 'Digite o nome completo.'
    }
  }); // Valida CPF

  window.Parsley.addValidator('cpf', {
    validateString: function validateString(value) {
      return validarCPF(value);
    },
    messages: {
      'pt-br': 'Informe um número de CPF válido.'
    }
  }); // Valida CNPJ

  window.Parsley.addValidator('cnpj', {
    validateString: function validateString(value) {
      return validarCNPJ(value);
    },
    messages: {
      'pt-br': 'Informe um número de CNPJ válido.'
    }
  }); // Valida CPF ou CNPJ

  window.Parsley.addValidator('cpf_cnpj', {
    validateString: function validateString(value) {
      return validaCPForCNPJ(value);
    },
    messages: {
      'pt-br': 'Informe um número de CPF ou CNPJ válido.'
    }
  }); // Verifica um campo com validação externa (Ex: E-mail já cadastrado no sistema)

  window.Parsley.addAsyncValidator('remote', function (resposta) {
    return resposta.responseText == "ok";
  }); // Tamanho do arquivo

  window.Parsley.addValidator('maxfilesize', {
    validateString: function validateString(value, maxSize, parsleyInstance) {
      var files = parsleyInstance.$element[0].files;
      return files.length != 1 || files[0].size <= maxSize * 1048576;
    },
    requirementType: 'integer',
    messages: {
      'pt-br': 'Este arquivo não deve ser maior que %s Mb'
    }
  }); // Exibe o 'check' nos campos validados com sucesso

  window.Parsley.on('field:success', function () {
    this.$element.parent('.show-validacao').addClass('valid');
  }).on('field:error', function () {
    this.$element.parent('.show-validacao').removeClass('valid');
  }); // Instancia o validador

  $('.form-validation').parsley(); // Contador de caracter

  $('textarea[maxlength]').each(function () {
    var limite = $(this).attr('maxlength');
    var count = $(this).val().length;
    $(this).after('<span class="caracter_count"></span>');
    var countEle = $(this).next('.caracter_count');
    countEle.text(count + '/' + limite);
  }).on('keyup keydown keypress', function () {
    var limite = $(this).attr('maxlength');
    var count = $(this).val().length;
    var countEle = $(this).next('.caracter_count');
    countEle.text(count + '/' + limite);
  });
})(jQuery);
"use strict";

/* =================== COMPLETA ENDEREÇO =================== */
jQuery(document).ready(function ($) {
  $('.cep_completa').on('change', function () {
    var input = $(this);
    var cep = $(this).val();
    var url = $(this).data('url');
    var loading = input.prev('.campo-loading');
    $.ajax({
      url: url,
      type: 'POST',
      data: {
        cep: cep
      },
      beforeSend: function beforeSend() {
        loading.fadeIn();
        input.prop('disabled', true);
      },
      success: function success(data) {
        console.log(data);
        loading.fadeOut();
        input.prop('disabled', false);

        try {
          var endereco = JSON.parse(data);
          $('#logradouro').val(endereco.logradouro);
          $('#bairro').val(endereco.bairro);
          $('#cidade').val(endereco.cidade);
          $('#estado').val(endereco.uf);
          $('#numero').focus();
          $('#logradouro').parsley().validate();
          $('#bairro').parsley().validate();
          $('#cidade').parsley().validate();
          $('#estado').parsley().validate();
        } catch (e) {
          return false;
        }
      },
      error: function error(xhr, type, exception) {
        loading.fadeOut();
        input.prop('disabled', false);
        console.log("ajax error response type " + type);
      }
    });
  });
});
"use strict";

// Altera a posição da imagem no mobile
$(function () {
  if (isMobileX(760)) {
    $(".load-img-mobile").each(function () {
      var container = $(this);
      var img = $('[data-id-img="' + container.data("img") + '"]');
      img.attr("data-aos", "");
      img.appendTo(container);
    });
  }
});
"use strict";

(function () {
  "use strict";

  function updateNumberPicker() {
    $(".number-picker-input").each(function () {
      var btnSub = $(this).find(".number-picker-sub");
      var btnAdd = $(this).find(".number-picker-add");
      var input = $(this).find("input");
      var min = Number(input.data("min"));
      var max = Number(input.data("max"));
      var qtde = Number(input.val());

      if (!isNaN(min) && qtde === min) {
        btnSub.addClass("disabled");
      } else {
        btnSub.removeClass("disabled");
      }

      if (!isNaN(max) && qtde === max) {
        btnAdd.addClass("disabled");
      } else {
        btnAdd.removeClass("disabled");
      }
    });
  }

  updateNumberPicker();
  $(".number-picker-sub").on("click", function (e) {
    e.preventDefault();
    var input = $($(this).data("target"));
    var min = Number(input.data("min"));
    var qtde = Number(input.val());

    if (isNaN(min) || qtde > min) {
      qtde--;
      input.val(qtde);
      input.trigger("change");
      updateNumberPicker();
    }
  });
  $(".number-picker-add").on("click", function (e) {
    e.preventDefault();
    var input = $($(this).data("target"));
    var max = Number(input.data("max"));
    var qtde = Number(input.val());

    if (isNaN(max) || qtde < max) {
      qtde++;
      input.val(qtde);
      input.trigger("change");
      updateNumberPicker();
    }
  });
})();
"use strict";

// GOOGLE RECAPTCHA V2
var $recaptchaEls = $(".recaptcha-el"); // Inicializa o Recaptcha

var initRecaptcha = function initRecaptcha() {
  $recaptchaEls.each(function () {
    // Variáveis
    var $el = $(this);
    var $form = $("#" + $el.data("form"));
    var sitekey = $el.data("key");
    var recaptcha = grecaptcha.render($el.get(0), {
      sitekey: sitekey,
      callback: reCaptchaVerify,
      "expired-callback": reCaptchaExpired
    });
    var $inputResponse = $form.find(".g-recaptcha-response");
    $inputResponse.prop("required", true); // Verifica se a validação foi realizada antes de enviar o formulário

    function reCaptchaVerify(response) {
      if (response === $inputResponse.val()) {
        $inputResponse.prop("required", false);
      } else {
        $inputResponse.prop("required", true);
      }

      $form.parsley().validate();
    }
  });
}; // Função chamada ao expirar a validação


function reCaptchaExpired() {//location.reload();

  /* showAlert(
    "Atenção",
    "Validação expirada, verifique novamente que não é um robô.",
    "warning"
  ); */
}
"use strict";

// ------------------------------------
// Botões de Compartilhamento
// ------------------------------------
(function () {
  "use strict"; // Variáveis

  var url = location.href;
  var urlEncoded = encodeURIComponent(url);
  var pageTitle = document.title;
  var pageTitleEncoded = encodeURIComponent(pageTitle);
  var $btnFacebook = $(".share-button.facebook");
  var $btnTwitter = $(".share-button.twitter");
  var $btnWhatsApp = $(".share-button.whatsapp");
  var $btnLinkedIn = $(".share-button.linkedin");
  var $btnCopyLink = $(".share-button.copy-link"); // Cria o link de compartilhamento para o Facebook

  function makeShareLinkFacebook() {
    var shareLinkFacebook = "https://www.facebook.com/sharer/sharer.php?u=" + urlEncoded;
    $btnFacebook.attr("href", shareLinkFacebook);
  }

  makeShareLinkFacebook(); // Cria o link de compartilhamento para o Twiiter

  function makeShareLinkTwiiter() {
    var shareLinkTwiiter = "https://twitter.com/intent/tweet?url=" + urlEncoded + "&text=" + pageTitle;
    $btnTwitter.attr("href", shareLinkTwiiter);
  }

  makeShareLinkTwiiter(); // Cria o link de compartilhamento para o WhatsApp

  function makeShareLinkWhatsApp() {
    var shareLinkWhatsApp = "https://api.whatsapp.com/send?text=" + pageTitle + " " + urlEncoded;
    $btnWhatsApp.attr("href", shareLinkWhatsApp);
  }

  makeShareLinkWhatsApp(); // Cria o link de compartilhamento para o LinkedIn

  function makeShareLinkLinkedIn() {
    var shareLinkLinkedIn = "https://www.linkedin.com/shareArticle?mini=true&url=" + urlEncoded + "&title=" + pageTitleEncoded;
    $btnLinkedIn.attr("href", shareLinkLinkedIn);
  }

  makeShareLinkLinkedIn(); // Evento de click no botão para copiar o link da página

  $btnCopyLink.on("click", function (ev) {
    ev.preventDefault();
    copyToClipboard(url);
    showAlert("Link Copiado", "O link para esta página foi copiado com sucesso.", "success");
  });
})();
"use strict";

/* =================== SLIDE HOME =================== */
jQuery(document).ready(function ($) {
  $(".slide-home").on("init", function () {
    $(".slide-content").show();
  }).slick({
    infinite: true,
    slidesToShow: 1,
    slidesToScroll: 1,
    dots: false,
    autoplay: true,
    autoplaySpeed: 5000,
    adaptiveHeight: true
  }).on("beforeChange", function () {
    $(".slide-content").hide();
  }).on("afterChange", function () {
    $(".slide-content").show();
  });
});
"use strict";

/* =================== SERVIÇOS HOME =================== */
jQuery(document).ready(function ($) {
  $('.carrosel-servicos').slick({
    slidesToShow: 4,
    slidesToScroll: 1,
    infinite: true,
    autoplay: true,
    autoplaySpeed: 3000,
    responsive: [{
      breakpoint: 1199,
      settings: {
        slidesToShow: 3
      }
    }, {
      breakpoint: 760,
      settings: {
        slidesToShow: 1
      }
    }]
  });
});
"use strict";

/* =================== BLOCOS HOME =================== */
jQuery(document).ready(function ($) {
  $(".carrosel-blocos").slick({
    slidesToShow: 4,
    slidesToScroll: 1,
    infinite: true,
    autoplay: true,
    autoplaySpeed: 3000,
    responsive: [{
      breakpoint: 1199,
      settings: {
        slidesToShow: 3
      }
    }, {
      breakpoint: 760,
      settings: {
        slidesToShow: 1
      }
    }]
  });
});
"use strict";

/* =================== CLIENTES =================== */
jQuery(document).ready(function ($) {
  $('.carrosel-clientes').slick({
    slidesToShow: 6,
    slidesToScroll: 1,
    infinite: true,
    autoplay: true,
    autoplaySpeed: 3000,
    responsive: [{
      breakpoint: 1119,
      settings: {
        slidesToShow: 4
      }
    }, {
      breakpoint: 760,
      settings: {
        slidesToShow: 2,
        slidesToScroll: 2
      }
    }]
  });
});
"use strict";

(function () {
  "use strict";

  $(document).scroll(function () {
    animeScroll($(".count"), function () {
      $(".count").not(".done").each(function () {
        $(this).addClass("done");
        $(this).prop("Counter", 0).animate({
          Counter: $(this).text()
        }, {
          duration: 3000,
          easing: "swing",
          responsive: [{
            breakpoint: 760,
            settings: {
              duration: 10000
            }
          }],
          step: function step(now) {
            $(this).text(Math.ceil(now));
          }
        });
      });
    });
  });
})();
"use strict";

/* =================== ENVIA CONTATO =================== */
jQuery(document).ready(function ($) {
  var enviando_formulario = false;
  $("#form-contato").on("submit", function (e) {
    e.preventDefault();
    var obj = this;
    var form = $(obj);
    var submit_btn = form.find('button[type="submit"]');
    var submit_btn_text = submit_btn.text();
    var dados = new FormData(obj);

    function volta_submit() {
      submit_btn.attr("disabled", false);
      submit_btn.text(submit_btn_text);
      enviando_formulario = false;
      hideLoading();
    }

    if (!enviando_formulario) {
      $.ajax({
        url: form.attr("action"),
        type: form.attr("method"),
        data: dados,
        processData: false,
        cache: false,
        contentType: false,
        beforeSend: function beforeSend() {
          showLoading();
          enviando_formulario = true;
          submit_btn.attr("disabled", true);
          submit_btn.text("Enviando...");
        },
        success: function success(data) {
          console.log(data);
          volta_submit();

          if (data == "ok") {
            form.find(".campo").val("");
            /* showAlert(
              "Sucesso",
              "Sua mensagem foi enviada com sucesso.",
              "success"
            ); */

            location.href = url_base + "obrigado-contato";
          } else {
            showAlert("Erro", "Não foi possível enviar a mensagem.", "error");
          }
        },
        error: function error(xhr, type, exception) {
          volta_submit();
          showAlert("Erro", "Não foi possível enviar a mensagem.", "error");
          console.log("ajax error response type " + type);
        }
      });
    }
  });
});
"use strict";

/* =================== ENVIA ORÇAMENTO =================== */
jQuery(document).ready(function ($) {
  var enviando_formulario = false;
  $("#form-orcamento").on("submit", function (e) {
    e.preventDefault();
    var obj = this;
    var form = $(obj);
    var submit_btn = form.find('button[type="submit"]');
    var submit_btn_text = submit_btn.text();
    var dados = new FormData(obj);

    function volta_submit() {
      submit_btn.attr("disabled", false);
      submit_btn.text(submit_btn_text);
      enviando_formulario = false;
      hideLoading();
    }

    if (!enviando_formulario) {
      $.ajax({
        url: form.attr("action"),
        type: form.attr("method"),
        data: dados,
        processData: false,
        cache: false,
        contentType: false,
        beforeSend: function beforeSend() {
          showLoading();
          enviando_formulario = true;
          submit_btn.attr("disabled", true);
          submit_btn.text("Enviando...");
        },
        success: function success(data) {
          console.log(data);
          volta_submit();

          if (data == "ok") {
            //closeModal("modal-orcamento");
            form.find(".campo").val("");
            /* showAlert(
              "Sucesso",
              "Sua mensagem foi enviada com sucesso.",
              "success"
            ); */

            location.href = url_base + "obrigado";
          } else {
            showAlert("Erro", "Não foi possível enviar a mensagem.", "error");
          }
        },
        error: function error(xhr, type, exception) {
          volta_submit();
          showAlert("Erro", "Não foi possível enviar a mensagem.", "error");
          console.log("ajax error response type " + type);
        }
      });
    }
  });
});
"use strict";

/* =================== CADASTRA NEWSLETTER =================== */
jQuery(document).ready(function ($) {
  var enviando_formulario = false;
  $('#form-newsletter').on('submit', function (e) {
    e.preventDefault();
    var obj = this;
    var form = $(obj);
    var submit_btn = $('#enviar_news');
    var submit_btn_text = submit_btn.text();
    var dados = new FormData(obj);

    function volta_submit() {
      submit_btn.attr('disabled', false);
      submit_btn.text(submit_btn_text);
      enviando_formulario = false;
      hideLoading();
    }

    if (!enviando_formulario) {
      $.ajax({
        url: form.attr('action'),
        type: form.attr('method'),
        data: dados,
        processData: false,
        cache: false,
        contentType: false,
        beforeSend: function beforeSend() {
          showLoading();
          enviando_formulario = true;
          submit_btn.attr('disabled', true);
          submit_btn.text('Aguarde...');
        },
        success: function success(data) {
          console.log(data);
          volta_submit();

          if (data == "ok") {
            $('#form-newsletter .campo').val('');
            showAlert('Sucesso', 'Seu e-mail foi cadastrado com sucesso.', 'success');
          } else {
            showAlert('Erro', 'Não foi possível realizar essa operação.', 'error');
          }
        },
        error: function error(xhr, type, exception) {
          volta_submit();
          showAlert('Erro', 'Não foi possível realizar essa operação.', 'error');
          console.log("ajax error response type " + type);
        }
      });
    }
  });
});
"use strict";

/* =================== LOGIN =================== */
jQuery(document).ready(function ($) {
  var enviando_formulario = false;
  $("#form-login").on("submit", function (e) {
    e.preventDefault();
    var obj = this;
    var form = $(obj);
    var submit_btn = $("#entrar");
    var submit_btn_text = submit_btn.text();
    var dados = new FormData(obj);

    function volta_submit() {
      submit_btn.attr("disabled", false);
      submit_btn.text(submit_btn_text);
      enviando_formulario = false; //hideLoading();
    }

    if (!enviando_formulario) {
      $.ajax({
        url: form.attr("action"),
        type: form.attr("method"),
        data: dados,
        processData: false,
        cache: false,
        contentType: false,
        beforeSend: function beforeSend() {
          //showLoading();
          enviando_formulario = true;
          submit_btn.attr("disabled", true);
          submit_btn.text("Aguarde...");
        },
        success: function success(data) {
          console.log(data);
          volta_submit();

          if (data == "ok") {
            $("#form-login .campo").val("");
            window.location.href = $("#login_retorno").val();
          } else {
            showAlert("Dados Inválidos", "Os dados de acesso estão inválidos. Verifique se o e-mail ou senha estão corretos.", "error");
          }
        },
        error: function error(xhr, type, exception) {
          volta_submit();
          showAlert("Erro", "Não foi possível realizar essa operação.", "error");
          console.log("ajax error response type " + type);
        }
      });
    }
  });
});
"use strict";

// LOGIN FACEBOOK
(function () {
  var appId = "123"; // Carrega o SDK

  (function (d, s, id) {
    var js,
        fjs = d.getElementsByTagName(s)[0];

    if (d.getElementById(id)) {
      return;
    }

    js = d.createElement(s);
    js.id = id;
    js.src = "https://connect.facebook.net/en_US/sdk.js";
    fjs.parentNode.insertBefore(js, fjs);
  })(document, "script", "facebook-jssdk"); // Inicializa a API


  window.fbAsyncInit = function () {
    FB.init({
      appId: appId,
      cookie: true,
      xfbml: true,
      version: "v3.1"
    });
    /* FB.getLoginStatus(function(response) {
      console.log(response);
    }); */
  }; // Login


  $("#facebook-login").on("click", function (e) {
    e.preventDefault(); // Abre o popup para o usuário logar com o facebook

    FB.login(function (response) {
      // Verifica se o login foi realizado com sucesso
      if (response.status === "connected") {
        // Retorna os dados do usuário
        FB.api("/me", {
          fields: "name, email"
        }, function (response) {
          var dados = response;
          dados.tipo = $("#login-tipo").val(); //response.picture = 'https://graph.facebook.com/'+dados.id+'/picture';
          // Tentativa de login

          $.ajax({
            url: $("#facebook_id_login").data("url"),
            type: "POST",
            data: dados,
            success: function success(data) {
              // Se encontrar o usuário, realiza o login
              if (data == "ok") {
                window.location.href = $("#login_retorno").val();
              } // Se não, abre o modal solicitando para que o usuário realize o login ou efetue um novo cadastro
              else if (data == "erro") {
                $("#facebook_id_login").val(dados.id);
                showAlert("Atenção", "<p><b>Usu\xE1rio n\xE3o encontrado</b></p>\n                     <p>Caso j\xE1 possua uma conta, efetue o login atrav\xE9s do e-mail e senha.</p>\n                     <p>Ainda n\xE3o se cadastrou? <b><a href=\"#\" class=\"link open-cadastro\">Cadastre-se</a></b></p>", "warning");
              } else {
                showAlert("Erro", "Não foi possível realizar essa operação.", "error");
              }
            },
            error: function error(request, status, _error) {
              console.log(request.responseText);
            }
          });
        });
      }
    }, // Permissões
    {
      scope: "public_profile, email"
    });
  }); // Cadastro com o facebook

  $("#facebook-cad").on("click", function (e) {
    e.preventDefault(); // Abre o popup para o usuário logar com o facebook

    FB.login(function (response) {
      // Verifica se o login foi realizado com sucesso
      if (response.status === "connected") {
        // Retorna os dados do usuário
        FB.api("/me", {
          fields: "name, email"
        }, function (response) {
          var dados = response;
          dados.facebook_id = dados.id;
          dados.tipo = $("#cadastro-tipo").val();
          /* response.picture = 'https://graph.facebook.com/'+dados.id+'/picture'; */
          // Verifica se já existe algum usuário já cadastrado com o e-mail ou facebook_id

          $.ajax({
            url: $("#facebook_id_cad").data("url"),
            type: "POST",
            data: dados,
            success: function success(data) {
              if (data == "ok") {
                // Popula o formulário de cadastro
                $("#form-cadastro #facebook_id_cad").val(dados.id);
                $("#form-cadastro #nome").val(dados.name);
                $("#form-cadastro #email").val(dados.email);
              } else if (data == "erro") {
                showAlert("Atenção", '<p>Já existe um usuário vinculado a esta conta do Facebook. Por favor, efetue o <b><a href="#" class="link open-login">Login</a></b>.</p>', "warning");
              } else {
                showAlert("Erro", "Não foi possível realizar essa operação.", "error");
              }
            },
            error: function error(request, status, _error2) {
              console.log(request.responseText);
            }
          });
        });
      }
    }, // Permissões
    {
      scope: "public_profile, email"
    });
  }); // Vincula com o facebook

  $("#facebook-vinc").on("click", function (e) {
    e.preventDefault(); // Abre o popup para o usuário logar com o facebook

    FB.login(function (response) {
      // Verifica se o login foi realizado com sucesso
      if (response.status === "connected") {
        // Retorna os dados do usuário
        FB.api("/me", {
          fields: "name, email"
        }, function (response) {
          var dados = response;
          dados.acao = "vincular";
          $.ajax({
            url: url_base + "acoes/app/corretor/vincular_facebook.php",
            type: "POST",
            data: dados,
            success: function success(data) {
              if (data == "ok") {
                showAlert("Sucesso", "O Facebook foi vinculado a sua conta com sucesso.", "success");
                setTimeout(function () {
                  window.location.reload();
                }, 2000);
              } else {
                showAlert("Atenção", "<p>Já existe um usuário vinculado a esta conta do Facebook.</p>", "warning");
              }
            },
            error: function error(request, status, _error3) {
              console.log(request.responseText);
            }
          });
        });
      }
    }, // Permissões
    {
      scope: "public_profile, email"
    });
  }); // Desvincular com o facebook

  $("#facebook-des").on("click", function (e) {
    e.preventDefault();
    var dados = {
      acao: "desvincular"
    };
    $.ajax({
      url: url_base + "acoes/app/corretor/vincular_facebook.php",
      type: "POST",
      data: dados,
      success: function success(data) {
        if (data == "ok") {
          showAlert("Sucesso", "O Facebook foi desvinculado da sua conta com sucesso.", "success");
          setTimeout(function () {
            window.location.reload();
          }, 2000);
        } else {
          showAlert("Erro", "Não foi possível realizar essa operação.", "error");
        }
      },
      error: function error(request, status, _error4) {
        console.log(request.responseText);
      }
    });
  });
})();
"use strict";

/* =================== CADASTRO =================== */
jQuery(document).ready(function ($) {
  var enviando_formulario = false;
  $("#form-cadastro").on("submit", function (e) {
    e.preventDefault();
    var obj = this;
    var form = $(obj);
    var submit_btn = $("#cadastrar");
    var submit_btn_text = submit_btn.text();
    var dados = new FormData(obj);

    function volta_submit() {
      submit_btn.attr("disabled", false);
      submit_btn.text(submit_btn_text);
      enviando_formulario = false; //hideLoading();
    }

    if (!enviando_formulario) {
      $.ajax({
        url: form.attr("action"),
        type: form.attr("method"),
        data: dados,
        processData: false,
        cache: false,
        contentType: false,
        beforeSend: function beforeSend() {
          //showLoading();
          enviando_formulario = true;
          submit_btn.attr("disabled", true);
          submit_btn.text("Aguarde...");
        },
        success: function success(data) {
          console.log(data);
          volta_submit();

          if (data == "ok") {
            $("#form-cadastro .campo").val("");
            window.location.href = $("#cadastro_retorno").val();
          } else {
            showAlert("Erro", "Não foi possível realizar essa operação.", "error");
          }
        },
        error: function error(xhr, type, exception) {
          volta_submit();
          showAlert("Erro", "Não foi possível realizar essa operação.", "error");
          console.log("ajax error response type " + type);
        }
      });
    }
  });
});
"use strict";

/* =================== MINHA CONTA =================== */
jQuery(document).ready(function ($) {
  var enviando_formulario = false;
  $("#form-recuperacao").on("submit", function (e) {
    e.preventDefault();
    var obj = this;
    var form = $(obj);
    var submit_btn = $("#enviar_rec");
    var submit_btn_text = submit_btn.text();
    var dados = new FormData(obj);

    function volta_submit() {
      submit_btn.attr("disabled", false);
      submit_btn.text(submit_btn_text);
      enviando_formulario = false;
    }

    if (!enviando_formulario) {
      $.ajax({
        url: form.attr("action"),
        type: form.attr("method"),
        data: dados,
        processData: false,
        cache: false,
        contentType: false,
        beforeSend: function beforeSend() {
          enviando_formulario = true;
          submit_btn.attr("disabled", true);
          submit_btn.text("Aguarde...");
        },
        success: function success(data) {
          console.log(data);
          volta_submit();

          if (data == "ok") {
            closeModal("modal-recuperacao");
            showAlert("Sucesso", "Uma mensagem foi enviada para o seu e-mail com instruções para você cadastrar uma nova senha.", "success");
          } else {
            showAlert("Erro", "Não foi possível realizar essa operação.", "error");
          }
        },
        error: function error(xhr, type, exception) {
          volta_submit();
          showAlert("Erro", "Não foi possível realizar essa operação.", "error");
          console.log("ajax error response type " + type);
        }
      });
    }
  });
});
"use strict";

/* =================== CADASTRA SENHA =================== */
jQuery(document).ready(function ($) {
  var enviando_formulario = false;
  $("#form-senha").on("submit", function (e) {
    e.preventDefault();
    var obj = this;
    var form = $(obj);
    var submit_btn = $("#cadastrar");
    var submit_btn_text = submit_btn.text();
    var dados = new FormData(obj);

    function volta_submit() {
      submit_btn.attr("disabled", false);
      submit_btn.text(submit_btn_text);
      enviando_formulario = false;
      hideLoading();
    }

    if (!enviando_formulario) {
      $.ajax({
        url: form.attr("action"),
        type: form.attr("method"),
        data: dados,
        processData: false,
        cache: false,
        contentType: false,
        beforeSend: function beforeSend() {
          showLoading();
          enviando_formulario = true;
          submit_btn.attr("disabled", true);
          submit_btn.text("Aguarde...");
        },
        success: function success(data) {
          console.log(data);
          volta_submit();

          if (data == "ok") {
            $("#form-senha .campo").val("");
            showAlert("Sucesso", "Sua nova senha foi cadastrada com sucesso.", "success");
            setTimeout(function () {
              window.location.href = $("#retorno_success").val();
            }, 3000);
          } else {
            showAlert("Erro", "Não foi possível realizar essa operação.", "error");
          }
        },
        error: function error(xhr, type, exception) {
          volta_submit();
          showAlert("Erro", "Não foi possível realizar essa operação.", "error");
          console.log("ajax error response type " + type);
        }
      });
    }
  });
});
"use strict";

/* =================== MINHA CONTA =================== */
jQuery(document).ready(function ($) {
  // Exibe a confirmação ao clicar no botão de remover
  $(".btn-confirm").on("click", function (e) {
    e.preventDefault();
    var idRemove = $(this).data("id");
    $("#id_remove").val(idRemove);
    openModal("modal-confirm");
  }); // Exibe a confirmação ao clicar no botão de cancelar plano

  $(".btn-cancela").on("click", function (e) {
    e.preventDefault();
    var idCancela = $(this).data("id");
    $("#id_cancela").val(idCancela);
    openModal("modal-cancelar");
  }); // Exibe/Oculta os campos da forma de pagamento escolhida

  $('input[name="forma-pagamento"]').on("change", function () {
    $(".forma-pag-content").slideUp();
    $(".forma-pag-content .campo").prop("disabled", true);
    $(".forma-pag-content .campo").prop("required", false);
    $('.forma-pag-content[data-forma="' + $(this).val() + '"]').slideDown();
    $('.forma-pag-content[data-forma="' + $(this).val() + '"] .campo').prop("disabled", false);
    $('.forma-pag-content[data-forma="' + $(this).val() + '"] .campo').prop("required", true);
  });
});
"use strict";

/* =================== ATUALIZAR DADOS =================== */
jQuery(document).ready(function ($) {
  var enviando_formulario = false;
  $("#form-update-dados").on("submit", function (e) {
    e.preventDefault();
    var obj = this;
    var form = $(obj);
    var submit_btn = $("#atualizar");
    var submit_btn_text = submit_btn.text();
    var dados = new FormData(obj);

    function volta_submit() {
      submit_btn.attr("disabled", false);
      submit_btn.text(submit_btn_text);
      enviando_formulario = false;
      hideLoading();
    }

    if (!enviando_formulario) {
      $.ajax({
        url: form.attr("action"),
        type: form.attr("method"),
        data: dados,
        processData: false,
        cache: false,
        contentType: false,
        beforeSend: function beforeSend() {
          showLoading();
          enviando_formulario = true;
          submit_btn.attr("disabled", true);
          submit_btn.text("Aguarde...");
        },
        success: function success(data) {
          console.log(data);
          volta_submit();

          if (data == "ok") {
            showAlert("Sucesso", "Seus dados foram atualizados com sucesso.", "success");
            setTimeout(function () {
              location.reload();
            }, 1500);
          } else {
            showAlert("Erro", "Não foi possível realizar essa operação.", "error");
          }
        },
        error: function error(xhr, type, exception) {
          volta_submit();
          showAlert("Erro", "Não foi possível realizar essa operação.", "error");
          console.log("ajax error response type " + type);
        }
      });
    }
  });
});
"use strict";

/* =================== CRUD PADRÃO =================== */
(function () {
  "use strict"; // Variáveis

  var $modal = $("#modal-registro");
  var $modalWrapper = $modal.find(".modal-wrap");
  var $modalForm = $("#form-registro");
  var $modalCampos = $modal.find(".modal-registro-campos");
  var $modalTitulo = $modal.find(".modal-titulo");
  var $modalTexto = $modal.find(".modal-registro-texto");
  var $modalBtn = $modal.find(".modal-btn-ac");
  var $modalAcao = $modal.find("#modal-acao");
  var $modalRegistro = $modal.find("#modal-registro");
  var enviando_formulario = false; // Exibe o modal para CADASTRO

  $(".modal-insert").on("click", function (ev) {
    ev.preventDefault();
    openModalInsert($(this));
  });

  function openModalInsert($el) {
    populaModal($el);
    $modalWrapper.removeClass("modal-sm");
    $modalCampos.show();
    openModal("modal-registro");
  } // Exibe o modal para EDIÇÃO


  $(".modal-update").on("click", function (ev) {
    ev.preventDefault();
    openModalUpdate($(this));
  });

  function openModalUpdate($el) {
    populaModal($el);
    $modalWrapper.removeClass("modal-sm");
    $modalCampos.show();
    openModal("modal-registro");
  } // Exibe o modal para REMOÇÃO


  $(".modal-rem").on("click", function (ev) {
    ev.preventDefault();
    openModalDel($(this));
  });

  function openModalDel($el) {
    populaModal($el);
    $modalWrapper.addClass("modal-sm");
    $modalCampos.hide();
    $modalForm.parsley().destroy();
    openModal("modal-registro");
  } // Popula o modal com as informações


  function populaModal($el) {
    $modalTitulo.text($el.data("tit"));

    if ($el.data("text")) {
      $modalTexto.text($el.data("text"));
      $modalTexto.show();
    } else {
      $modalTexto.text("");
      $modalTexto.hide();
    }

    $modalBtn.text($el.data("btn"));
    $modalAcao.val($el.data("acao"));

    if ($el.data("reg")) {
      $modalRegistro.val($el.data("reg"));
    } else {
      $modalRegistro.val($el.data(""));
    }

    resetFormModal();

    if ($el.data("campos")) {
      $.each($el.data("campos"), function (campo, valor) {
        var $campo = $("#" + campo); // Datepicker

        if ($campo.hasClass("datepicker")) {
          datepickerInput.setDate(valor);
        } // Arquivos
        else if (["arquivo", "arquivo_prev"].indexOf(campo) !== -1) {
          $campo.prop("required", false);
        } // Valor
        else if (campo == "valor") {
          $campo.val(formataMoeda(valor));
        } // Demais
        else {
          $campo.val(valor);
        }
      });
    }
  } // Reseta os campos do formulário


  function resetFormModal() {
    $modalCampos.find(".campo").each(function () {
      var $campo = $(this);

      if ($campo.hasClass("datepicker")) {
        datepickerInput.setDate("today");
      }

      if ($campo.is("[data-required ]")) {
        $campo.prop("required", true);
      }

      $campo.val("");
    });
    $modalForm.parsley().reset();
  } // Processa o formulário


  $modalForm.on("submit", function (ev) {
    ev.preventDefault();
    var obj = this;
    var dados = new FormData(obj);

    if (!enviando_formulario) {
      $.ajax({
        url: $modalForm.attr("action"),
        type: $modalForm.attr("method"),
        data: dados,
        processData: false,
        cache: false,
        contentType: false,
        beforeSend: function beforeSend() {
          //showLoading();
          enviando_formulario = true;
          $modalBtn.attr("disabled", true);
          $modalBtn.text("Aguarde...");
        },
        success: function success(resp) {
          console.log(resp);
          resp = JSON.parse(resp);

          if (resp.status == "success") {
            closeModal("modal-registro");
            showAlert("Sucesso", resp.msg, "success");
          } else {
            closeModal("modal-registro");
            showAlert("Erro", resp.msg, "error");
          }

          setTimeout(function () {
            location.reload();
          }, 2000);
        },
        error: function error(xhr, type, exception) {
          closeModal("modal-registro");
          showAlert("Erro", "Não foi possível realizar esta operação.", "error");
          console.log("ajax error response type " + type);
          setTimeout(function () {
            location.reload();
          }, 2000);
        }
      });
    }
  });
})();
"use strict";

/* =================== ANIMATE SCROLL =================== */
// Adiciona uma classe aos elementos após o mesmos serem exibidos na tela
function animeScroll(target, animationClass) {
  var documentTop = $(document).scrollTop();
  var windowHeight = $(window).height();
  var offset = windowHeight - windowHeight / 4;
  target.each(function () {
    var eleTop = $(this).offset().top;

    if (documentTop > eleTop - offset) {
      $(this).addClass(animationClass);
    }
  });
}

jQuery(document).ready(function ($) {
  AOS.init({
    duration: 700,
    offset: 40
  });
});
//# sourceMappingURL=script.min.js.map
